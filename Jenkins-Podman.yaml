pipeline {
    agent {
        kubernetes {
            yaml '''
apiVersion: v1
kind: Pod
metadata:
    name: python
spec:
    containers:
    - name: python
        image: python:slim
        command:
        - cat
        tty: true
        securityContext:
            privileged: true
'''
        }
    }

    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_ACCOUNT_ID = '772561320311'    // Replace with your AWS account ID
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '3'))
        durabilityHint('PERFORMANCE_OPTIMIZED')
        disableConcurrentBuilds()
    }

    stages {
        stage('Build with Podman') {
            steps {
                withCredentials([amazonWebServices(credentialsId: 'AWS_CLI_CREDENTIALS')]) {
                    container('python') {
                        sh '''
                            apt update -y && apt install -y podman awscli
                            cd ${WORKSPACE}/terraform-k8s-Jenkins-podman-buildah/build && cp ${WORKSPACE}terraform-k8s-Jenkins-podman-buildah/docker/Dockerfile .
                            echo "jenkins build Number is ${BUILD_NUMBER}"
                            podman build -t 772561320311.dkr.ecr.us-east-1.amazonaws.com/devops:${BUILD_NUMBER} -f Dockerfile .
                            podman images
                            aws ecr get-login-password --region $AWS_DEFAULT_REGION | podman login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
                        '''
                    }
                }
            }
        }
    }
}
